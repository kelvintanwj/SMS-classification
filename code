{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "ST4240 Q3.ipynb",
      "version": "0.3.2",
      "views": {},
      "default_view": {},
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "metadata": {
        "id": "pbRGOy8OCQMB",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Question 3\n",
        "\n",
        "The SMS Spam Collection is a set of SMS tagged messages that have been collected for SMS Spam research. It contains one set of SMS messages in English of 5,574 messages, tagged acording being ham (legitimate) or spam. Your task is to build a classifier for determining whether a SMS is a spam or a ham. Data is available here.\n",
        "Remarks:\n",
        "- There are plenty of R/Python packages for text manipulation.\n",
        "- You are allowed to use any vocabulary / stop-word / etc.. dataset you deem appropriate.\n",
        "\n",
        "I will be applying three methods to the data set and compare the results.\n",
        "1. Random Forest\n",
        "2. Logistic Regression\n",
        "3. Naive Bayes"
      ]
    },
    {
      "metadata": {
        "id": "QR4WmfnmS6fl",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        },
        "cellView": "both"
      },
      "cell_type": "code",
      "source": [
        "#import libraries\n",
        "%matplotlib inline\n",
        "from __future__ import print_function\n",
        "\n",
        "from sklearn.cross_validation import train_test_split\n",
        "from sklearn.preprocessing import LabelEncoder\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.feature_extraction.text import TfidfTransformer\n",
        "import seaborn as sn\n",
        "\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "import os\n",
        "import re\n",
        "from os import listdir\n",
        "from os.path import isfile, join\n",
        "from collections import Counter"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "F397cwwMFDZB",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "def clean_text(texts):\n",
        "        '''\n",
        "        Utility function to clean text by removing links, special characters\n",
        "        '''\n",
        "        return ' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)\", \" \", texts).split())"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "nM-O-4w7BEt_",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            },
            {
              "item_id": 3
            }
          ],
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 86
        },
        "outputId": "eb656a6b-3789-4394-d1ca-c7dd72e2398f",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522289695771,
          "user_tz": -480,
          "elapsed": 15446,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#upload file to google colab --- rerun this and upload file to run\n",
        "from google.colab import files\n",
        "\n",
        "uploaded = files.upload()\n",
        "\n",
        "for fn in uploaded.keys():\n",
        "  print('User uploaded file \"{name}\" with length {length} bytes'.format(\n",
        "      name=fn, length=len(uploaded[fn])))"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-f95f10b2-59f4-496f-a635-b283b0087aae\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-f95f10b2-59f4-496f-a635-b283b0087aae\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving spam.csv to spam (2).csv\n",
            "User uploaded file \"spam.csv\" with length 503663 bytes\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "OLbfb3HdBkVs",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "sms_data = pd.read_csv(\"spam.csv\", encoding='cp437')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "XFysnTxADAtn",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#removing last 3 column\n",
        "sms_data.drop('Unnamed: 2',axis= 1,inplace=True)\n",
        "sms_data.drop('Unnamed: 3',axis= 1,inplace=True)\n",
        "sms_data.drop('Unnamed: 4',axis= 1,inplace=True)\n",
        "sms_data.rename(index=str, columns={\"v1\": \"indicator\", \"v2\": \"text\"},inplace=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "F5FmPc3yDnEq",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "8fa6a3b9-c264-4201-a9f2-cc8b5f3da482",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291146163,
          "user_tz": -480,
          "elapsed": 904,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "sms_data.head()"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>indicator</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ham</td>\n",
              "      <td>Go until jurong point, crazy.. Available only ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>ham</td>\n",
              "      <td>Ok lar... Joking wif u oni...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>spam</td>\n",
              "      <td>Free entry in 2 a wkly comp to win FA Cup fina...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ham</td>\n",
              "      <td>U dun say so early hor... U c already then say...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ham</td>\n",
              "      <td>Nah I don't think he goes to usf, he lives aro...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  indicator                                               text\n",
              "0       ham  Go until jurong point, crazy.. Available only ...\n",
              "1       ham                      Ok lar... Joking wif u oni...\n",
              "2      spam  Free entry in 2 a wkly comp to win FA Cup fina...\n",
              "3       ham  U dun say so early hor... U c already then say...\n",
              "4       ham  Nah I don't think he goes to usf, he lives aro..."
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "metadata": {
        "id": "hK4HajCHG4ty",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Transformation of indicator and text\n",
        "\n",
        "1. Encode indicators to {'ham':0} {'spam':1}\n",
        "2. Removes digit and special characters from text"
      ]
    },
    {
      "metadata": {
        "id": "UFYoMTmwFuWS",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "le=LabelEncoder()\n",
        "labels=le.fit_transform(sms_data['indicator'])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "6ZL0bhQJEqiA",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "texts = sms_data['text']\n",
        "clean_texts = []\n",
        "for text in texts:\n",
        "    result = ''.join([i for i in text if not i.isdigit()])\n",
        "    result = clean_text(result)\n",
        "    clean_texts.append(result)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "luxxScg4j1mm",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "5c37d79c-3c9f-422b-8ebb-5467cc6ab6b9",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291148824,
          "user_tz": -480,
          "elapsed": 1018,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "nb_of_spam = int(np.mean(labels)*len(labels))\n",
        "nb_of_non_spam = int(len(labels) - nb_of_spam)\n",
        "print(\"There are\",nb_of_spam,\"spam texts and\",nb_of_non_spam,\"non-spam texts.\")"
      ],
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "There are 747 spam texts and 4825 non-spam texts.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "VyCvG5nJHaHm",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Transform text data -> matrices using TFIDF_Vectorizer\n",
        "\n",
        "TFIDF_vectorizer transforms text to feature vectors that can be used as input to estimator.\n",
        "This is done by converting each word(token) to feature index in a matrix, creating a bag of words.\n",
        "Then normalisation in accordance to the length of sentence and document."
      ]
    },
    {
      "metadata": {
        "id": "K8WZlN74Wig4",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 1969
        },
        "outputId": "216030bc-a622-4aa2-d3c5-9aadbcaaf0ff",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291150569,
          "user_tz": -480,
          "elapsed": 1090,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "no_features = 10000\n",
        "tfidf_vectorizer = TfidfVectorizer(max_df=0.5, min_df=2, max_features=no_features, stop_words='english')\n",
        "tfidf = tfidf_vectorizer.fit_transform(clean_texts)\n",
        "tfidf_feature_names = tfidf_vectorizer.get_feature_names()\n",
        "pd.DataFrame(tfidf.toarray(), columns=tfidf_vectorizer.get_feature_names())"
      ],
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>aah</th>\n",
              "      <th>aathi</th>\n",
              "      <th>abi</th>\n",
              "      <th>ability</th>\n",
              "      <th>abiola</th>\n",
              "      <th>abj</th>\n",
              "      <th>able</th>\n",
              "      <th>absolutly</th>\n",
              "      <th>abt</th>\n",
              "      <th>abta</th>\n",
              "      <th>...</th>\n",
              "      <th>youre</th>\n",
              "      <th>yr</th>\n",
              "      <th>yrs</th>\n",
              "      <th>yummy</th>\n",
              "      <th>yun</th>\n",
              "      <th>yunny</th>\n",
              "      <th>yuo</th>\n",
              "      <th>yup</th>\n",
              "      <th>zed</th>\n",
              "      <th>zoe</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5542</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5543</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5544</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5545</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5546</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5547</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5548</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5549</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5550</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5551</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5552</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5553</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5554</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5555</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5556</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5557</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5558</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5559</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5560</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5561</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5562</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5563</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5564</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5565</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5566</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5567</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5568</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5569</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5570</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5571</th>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>...</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5572 rows × 3554 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      aah  aathi  abi  ability  abiola  abj  able  absolutly  abt  abta ...   \\\n",
              "0     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "1     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "2     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "3     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "4     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "6     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "7     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "8     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "9     0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "10    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "11    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "12    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "13    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "14    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "15    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "16    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "17    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "18    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "19    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "20    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "21    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "22    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "23    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "24    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "25    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "26    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "27    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "28    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "29    0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "...   ...    ...  ...      ...     ...  ...   ...        ...  ...   ... ...    \n",
              "5542  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5543  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5544  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5545  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5546  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5547  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5548  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5549  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5550  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5551  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5552  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5553  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5554  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5555  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5556  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5557  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5558  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5559  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5560  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5561  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5562  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5563  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5564  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5565  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5566  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5567  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5568  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5569  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5570  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "5571  0.0    0.0  0.0      0.0     0.0  0.0   0.0        0.0  0.0   0.0 ...    \n",
              "\n",
              "      youre   yr  yrs  yummy  yun  yunny  yuo  yup  zed  zoe  \n",
              "0       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "1       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "2       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "3       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "4       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "6       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "7       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "8       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "9       0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "10      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "11      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "12      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "13      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "14      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "15      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "16      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "17      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "18      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "19      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "20      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "21      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "22      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "23      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "24      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "25      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "26      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "27      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "28      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "29      0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "...     ...  ...  ...    ...  ...    ...  ...  ...  ...  ...  \n",
              "5542    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5543    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5544    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5545    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5546    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5547    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5548    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5549    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5550    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5551    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5552    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5553    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5554    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5555    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5556    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5557    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5558    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5559    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5560    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5561    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5562    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5563    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5564    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5565    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5566    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5567    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5568    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5569    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5570    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "5571    0.0  0.0  0.0    0.0  0.0    0.0  0.0  0.0  0.0  0.0  \n",
              "\n",
              "[5572 rows x 3554 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 37
        }
      ]
    },
    {
      "metadata": {
        "id": "9_EagZlxIKdV",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "a3eb1752-813f-4b36-bd85-245653fb374e",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291151753,
          "user_tz": -480,
          "elapsed": 1085,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#shape of matrix: (5572, 3554)\n",
        "pd.DataFrame(tfidf.toarray(), columns=tfidf_vectorizer.get_feature_names()).shape"
      ],
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(5572, 3554)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 38
        }
      ]
    },
    {
      "metadata": {
        "id": "RXY7XHLee5pJ",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#Splitting data sets for cross-validation\n",
        "X_train, X_test, y_train, y_test = train_test_split(tfidf.toarray(), labels, test_size = 0.20)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "metadata": {
        "id": "FYQPU6cKJy_b",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Algorithm: Random Forest\n",
        "\n",
        "Properties:\n",
        "- Bootstrap estimation = True\n",
        "- criterion = entropy\n",
        "- number of trees = 50\n",
        "- First, performance will be estimated using cross-validation. Results will be compared to Out of Bag estimates."
      ]
    },
    {
      "metadata": {
        "id": "EYv0q3p5S9XG",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "e758ac4f-f23d-4dd0-9518-d7186b4f5922",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291239261,
          "user_tz": -480,
          "elapsed": 11387,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#import RF library\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score,precision_score,recall_score,f1_score,roc_curve, auc,confusion_matrix\n",
        "from sklearn import metrics\n",
        "\n",
        "clf=RandomForestClassifier(n_estimators=50,criterion='entropy',bootstrap=True)\n",
        "clf.fit(X_train,y_train)\n",
        "predRF=clf.predict(X_test)\n",
        "\n",
        "print('Accuracy score: {}'.format(accuracy_score(y_test, predRF)))\n",
        "print('Precision score: {}'.format(precision_score(y_test, predRF)))\n",
        "print('Recall score: {}'.format(recall_score(y_test, predRF)))\n",
        "print('F1 score: {}'.format(f1_score(y_test, predRF)))"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy score: 0.9775784753363229\n",
            "Precision score: 1.0\n",
            "Recall score: 0.823943661971831\n",
            "F1 score: 0.9034749034749034\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "67-d3htmOO_t",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "0d312389-6ede-401f-f7a7-2bd42b6de497",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291240979,
          "user_tz": -480,
          "elapsed": 898,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#plotting ROC curve\n",
        "prob_predRF=clf.predict_proba(X_test)\n",
        "\n",
        "fpr = dict()\n",
        "tpr = dict()\n",
        "roc_auc = dict()\n",
        "n_classes = 2\n",
        "for i in range(n_classes):\n",
        "    fpr[i], tpr[i], _ = roc_curve(y_test, prob_predRF[:,i])\n",
        "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
        "    \n",
        "\n",
        "plt.figure()\n",
        "lw = 2\n",
        "plt.plot(fpr[1], tpr[1], color='darkorange',\n",
        "         lw=lw, label='ROC curve (area = %0.2f)' % roc_auc[1])\n",
        "plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.05])\n",
        "plt.xlabel('Specificity')\n",
        "plt.ylabel('Sensitivity')\n",
        "plt.title('Receiver operating characteristic Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.show()"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feef9468eb8>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "VMLT6ZHnoR92",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            },
            {
              "item_id": 2
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "0f7fdd30-9ef4-4f67-da52-acda10c7e647",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291846949,
          "user_tz": -480,
          "elapsed": 769,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "conf_arr = confusion_matrix(y_test, predRF)\n",
        "\n",
        "df_cm = pd.DataFrame(conf_arr, index = ['Ham','Spam'],\n",
        "                  columns = ['Ham','Spam'])\n",
        "plt.figure(figsize = (10,7))\n",
        "sn.heatmap(df_cm, annot=True,cbar_kws={\"orientation\": \"horizontal\"})\n",
        "plt.xlabel(\"Predicted Label\")\n",
        "plt.ylabel(\"True Label\")"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(69,0.5,'True Label')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nu4vBJroDYylGhl5pNvpzH7Bmiz7WpwgulOeCbQtQ3k+jzYBFI+K08vIMirD0ZeDc8rp75/HYxgFD\nI+IQYDqwMMUoF8ALKaU3mh3jGuX2rR2jpE7OsCUpp9nmbLVievnzx8ColNI3m2+MiHWAhmar6lvZ\nR4m5j9J/DOyQUprQYv91zfbf2r7bczRFYBqSUipFRPN9N6+5rlxjq8coqfPzMqKkajCaYn7VEgAR\nsVNEbA+8BKwQEYuVg9EWrbz3YYrLh0RE74h4NCK6UQSehcpt/gnsXG4zICIuLq9/jmJUDYr5X/Ni\nceC5ctDajmI+WPfytlUiYnD59RDgmXaOUVIn58iWpIpLKb0ZEUcBd0bERxQT1vdOKb0XEedQXH4c\nC7xCEWqa+xUwJCIephidujClND0i/g5cHRFHA0cC10TE9ygC0dnl954J3BQROwEPUUysb83Xml0O\nBbgGuA74v4j4BvBH4Nbyx/HAv4FzImIl4APg5pTSlNaOcZ6/WJJqjs9GlCRJysjLiJIkSRkZtiRJ\nkjIybEmSJGVk2JIkScrIsCVJkpSRYUuSJCkjw5YkSVJGhi1JkqSMDFuSJEkZGbYkSZIyMmxJkiRl\nZNiSJEnKyLAlSZKUkWFLkiQpI8OWJElSRoYtSZKkjAxbkiRJGRm2JEmSMjJsSZIkZWTYkiRJysiw\nJUmSlJFhS5IkKSPDliRJUkaGLUmSpIwMW5IkSRkZtiRJkjLqWukC2jL9g4klAEqNnxqYbbmhNOeb\nym1K5TZzLDfX0EabVtqWOth2tppa1ttyv83attxf07G2aDvbPuZWQ6nt/bfVdrb9t/j6zlljR9q2\nWG7lnM2x34bZ39uRti37a/U9Ldq29i3RVg2tff98st/Zl+doW5rzPZ/U3Xr/zV+2dj5n297ee1ps\naO89LWtseVzttW2539a+ti2Pud1/b23sr/XzMJf9t9K2YV7q7mDb1r5OLftpr21b+21tH3OroaGd\n/X+y37b3NWfbFl+DZt/UDS3atuyvZT+t19uillb+Ibes4ZPlDpxn5vy6NG/X2v7aek97NTTQcv9z\nfp1aHnNT22bvbXke2zwfrZyHz7Pt7N9HLds2tNq21fPRRpuGlv/PfU5tS8zZtq39tfxem/2czf7/\n/Zznt2GO9z396gN1c3Re5siWJElSRoYtSZKkjAxbkiRJGRm2JEmSMjJsSZIkZWTYkiRJysiwJUmS\nlJFhS5IkKSPDliRJUkaGLUmSpIwMW5IkSRkZtiRJkjIybEmSJGVk2JIkScrIsCVJkpSRYUuSJCkj\nw5YkSVJGhi1JkqSMDFuSJEkZGbYkSZIyMmxJkiRlZNiSJEnKyLAlSZKUkWFLkiQpI8OWJElSRoYt\nSZKkjAxbkiRJGdWVSqVK1yBJktRpObIlSZKUkWFLkiQpI8OWJElSRoYtSZKkjAxbkiRJGRm2JEmS\nMjJsSZIkZdS10gW0JiIuAjYASsBRKaXRFS5JcxERPwWGUnxPnQuMBm4G6oG3gD1TSh9HxO7A0UAD\ncE1KaUSFSlYbIqIH8CxwFvAPPI81qXyOTgBmAqcCT+O5rDkR0Qu4CegLdAfOAN4GrqT4P/LplNIh\n5bY/AHYqrz8jpXRXRYrWHKpuZCsihgErp5Q2BPYHLq1wSZqLiNgMWL18zrYCLgbOBC5PKQ0FXgT2\ni4ieFD/0twQ2BY6JiH6VqVrtOBl4t/za81iDIqI/cBqwMfBNYHs8l7VqHyCllDYDdgQuofgZe1RK\naQjQJyK2jojlgV355JxfGBH1FapZLVRd2AK2AP4AkFJ6HugbEb0rW5Lm4kGK36YA3gd6UvzgvqO8\n7k8UP8zXB0anlCallKYCDwFD5m+pak9ErAKsCvy5vGpTPI+1aEvgnpTS5JTSWymlA/Fc1qoJQP/y\n674Uvwgt3+yKT+O53Az4S0ppekppPPAqxb9lVYFqDFtLAOObLY8vr1OVSinNSil9WF7cH7gL6JlS\n+ri8bhywJHOe28b1qh4XAMc2W/Y81qblgEUi4o6IGBkRW+C5rEkppduAZSLiRYpfbI8H3mvWxHNZ\nA6oxbLVUV+kC1DERsT1F2Dq8xaa2zqHntopExF7Av1JKY9to4nmsHXUUoyE7UFyGup7Zz5PnskZE\nxB7AaymllYDNgVtaNPFc1oBqDFtvMvtI1mCKyZyqYhHxDWA4sHVKaRIwpTzRGmApivPa8tw2rld1\n2BbYPiIeAQ4ATsHzWKveAR5OKc1MKb0ETAYmey5r0hDgboCU0lNAD2BAs+2eyxpQjWHrbxSTAImI\ntYA3U0qTK1uS2hMRfYDzgW+mlBonVt8DfLf8+rvAX4FHgXUjYrHyX9gMAUbO73rVupTSLimldVNK\nGwDXUvw1ouexNv0N2DwiupQny/fCc1mrXqSYW0dELEsRnJ+PiI3L23egOJf3AttGRLeIGEwRtp6r\nQL1qRV2pVKp0DXOIiJ8Am1D8KfJh5TSvKhURBwKnA/9ttnpviv+wF6aYqLlvSmlGROwI/IDiT5Mv\nSyndOp/LVQdExOnAKxS/Ud+E57HmRMRBFJf1Ac6muB2L57LGlEPwdcDiFLfWOYXi1g9XUwyYPJpS\nOrbc9ghgd4pzeXJK6R8VKVrsFwIeAAAAPElEQVRzqMqwJUmS1FlU42VESZKkTsOwJUmSlJFhS5Ik\nKSPDliRJUkaGLUmSpIwMW5IkSRkZtiRJkjL6fx2otd3B4HPWAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feeee3be7f0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "VsK9Q0td1o7D",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "4b4a9317-5ae9-45d3-a7f8-91c8565f42f3",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522227919976,
          "user_tz": -480,
          "elapsed": 17668,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#comparing results with Out of Bag Estimates\n",
        "clf=RandomForestClassifier(n_estimators=50,criterion='entropy',bootstrap=True,oob_score=True)\n",
        "clf.fit(tfidf.toarray(),labels)\n",
        "clf.oob_score_"
      ],
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.9763101220387652"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 154
        }
      ]
    },
    {
      "metadata": {
        "id": "-OATVBJnLSPq",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Algorithm: Logistic Regression"
      ]
    },
    {
      "metadata": {
        "id": "BrKgtk60Wg0s",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "de77287f-1a6d-43db-f3bb-94ff00c1627f",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291919804,
          "user_tz": -480,
          "elapsed": 1017,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "clf = LogisticRegression()\n",
        "clf.fit(X_train,y_train)\n",
        "predLR = clf.predict(X_test)\n",
        "\n",
        "print('Accuracy score: {}'.format(accuracy_score(y_test, predLR)))\n",
        "print('Precision score: {}'.format(precision_score(y_test, predLR)))\n",
        "print('Recall score: {}'.format(recall_score(y_test, predLR)))\n",
        "print('F1 score: {}'.format(f1_score(y_test, predLR)))"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy score: 0.9668161434977578\n",
            "Precision score: 0.9906542056074766\n",
            "Recall score: 0.7464788732394366\n",
            "F1 score: 0.8514056224899599\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "QpKvJf2kRbK5",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "4e78dbcc-bdcf-4011-bdc1-926aa48d3b66",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291921548,
          "user_tz": -480,
          "elapsed": 1018,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#plotting ROC curve\n",
        "prob_predLR=clf.predict_proba(X_test)\n",
        "\n",
        "fpr = dict()\n",
        "tpr = dict()\n",
        "roc_auc = dict()\n",
        "n_classes = 2\n",
        "for i in range(n_classes):\n",
        "    fpr[i], tpr[i], _ = roc_curve(y_test, prob_predLR[:,i])\n",
        "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
        "    \n",
        "\n",
        "plt.figure()\n",
        "lw = 2\n",
        "plt.plot(fpr[1], tpr[1], color='darkorange',\n",
        "         lw=lw, label='ROC curve (area = %0.2f)' % roc_auc[1])\n",
        "plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.05])\n",
        "plt.xlabel('Specificity')\n",
        "plt.ylabel('Sensitivity')\n",
        "plt.title('Receiver operating characteristic Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.show()"
      ],
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYcAAAEVCAYAAAALsCk2AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDIuMS4yLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvNQv5yAAAIABJREFUeJzt3Xd4FWX2wPHvTSWQRJIQpKMIHooN\nEAm9BHUtKxasq4i9IKKLgDQVkQ42/CnKuijrWrErIIKAQMRVELuH3pEaCJCe3N8fM4GQQhLMzU05\nn+fhIXfquW8mc+Z935l3PF6vF2OMMSa3AH8HYIwxpvyx5GCMMSYfSw7GGGPyseRgjDEmH0sOxhhj\n8rHkYIwxJp8gfwdgiiYiXmA9kOlOCgKWAA+q6pFS3tdVwN9V9fbS3K6/iUh7IEVVfxKRB4BTVXWU\nj/fpBRqq6jZf7qeA/QrO9/u6hOuNBzar6vQTLHMx8LuqbinO8gWsXw+YAHQEvMBh4DlVfa0ksRrf\ns+RQcXTPOcmISCjwNjAcGFGaO1HVD4EPS3Ob5cRtwDLgJ1V9wd/B+NhVOH/bJUoOqjqsGIs9DDwF\nbCnm8keJSLgb03+B21Q1S0SaA3NEJFhVZ5Rke8a3LDlUQKqaJiLzgCvgaLKYDPwNCAFeUdVx7ry2\nwCtABLAT6KeqG0WkJfASUBdIw/lj/V5E+gE3A08DE1X17Jz9ishq4FFgBTANaI9zDI1R1ZnuMl6c\npNUPaKmqWbnWrwY8C/QAsoE5wBD3JOEFBgK3A/WAx3KuSEXkbuCfQDXgG+B2VU0RkdeA/UAvYAzw\nOTATOM8th/dV9RERuRfoC1whIrWBSKCBqt4pIouBT4CrgdNxTl43qarXLYsJwC7gGWCmqnry/j5E\n5G/AVCAYWAP0VdX97uxLReQet5ynqupUd51RbjkHAb8DN6vqARF5AqgPnAu8CTzvlnUv9zstc79/\nhojUcr9vK5wr8EeAUGAYkC4iUao6qATldxmwTlWfcmtX/QEPkISTXG8A4oEWIjIEuCTX8gUeZ3mK\n6lZgt6o+njNBVf9wa6vpbrkcV9vK+Qw0BcYB24AMoBnO8fm+u9yVwKOqGicivXESWA1gnfv73Jv3\n92ZOzPocKiARiQJuAhLcSUOAlsDZOCeKPiJyuTvvbWCkqp6JUyN4QUQCgI+AWe70e4GPRST3xcIC\noIGInO7u83SggTt9Ks7JvTlOghgtImflWtejqpI7MbgewvlDbwW0AboAN+aa30xVz3OnPysiMSLS\nBefE1VNVTwMOup9zxAMXqOp7wH04J6fm7vb7iUhnN8n8DycRPV1Akf4duBA4E+gJdBSRaOBFnBNn\na+DiAtZDRGrgXAlf75blujzxnaaqbXES+VMiEuyeSB8A2uGc5ELdzzkuBS5V1WdxagFdgLOAFkBb\n4Hp3uQnAb6raBOfE+xYwH+f3/JybGEpSfjnfKcJd5gJVbY5z4XGZ2wy3HfiHqr6TpyjyHWcFFFc3\nnAR+HFX9UVV/L2D5vFoD01X1H8Bs3Isj11XAuyLSBPgPcKNbLouAYjd7mWMsOVQci0XkDxHZAGwE\nFgIT3Xl/B15U1TS3D2IWcLWInAnUUtW57nIvANfgnDxrA/8GUNXlwB6cdmDcaenApxz7A7wK+EhV\nM939Paeq2aq6B/gA58o7x2eFfIfLcGo1maqagnNSvSjX/Jx4FFDgAndf76jqDneZ6Xn2tVBVU931\npgK9VdWrqonAr0CTQmLJbbaqprhltwZohJP01qjqL6qajVPLKkgnYKuq/uJ+HoLT9JLjDff/H3Cu\n3Gup6kqcq+Mkd9sJeeL8NudK170yPl9VM9zv+V2uZS/FSQio6g84iSgtT3zFLr9cUnH6A+4QkVNV\n9T1VnVTI9+cEx1le0Ti1sJOVoqpfuT/PxqmVBboXNZcB7+HUnhfn+n1Mx6kxBv6F/VZJ1qxUcXRX\n1W1uU8IanD/4nA7qmsAzIjLO/RyKc6VcC+dKEQB3+UwRqQlUB353+i4Bp6klJs8+Z+M09TwHXMmx\nK86aOFdpOfsPw/nDzLGfgsUCibk+J+IkqYLWSwSi3H1dJSI5SSQAp3kl3zoi0gx42m3HzsKppcws\nJJbcDub6OQsIdPedO57thaxbCziQ88FNqrkludOz3LIOFJHqOL+v7u4y0Rx/RZ37O8UC00SkDU5t\nrQ5O01xB+z5UQHzFLr9c28kQkXic5sHRIvITcL+q/lzA9nPiyHecFbDcXpwms5N1NFZV3SAiW3Eu\naIKdSbrVPba7isgfudY7iHNs7/4L+65yLDlUMKq6V0SeByYBvd3JO4ApqnrcFbt7RRctIgGqmi0i\nwTh/nDuAJLfJgDzr9Mv18QtgpnvSPRPIuWrbAVyZ6+qsuHZxfAKK4fgryVrAZvfnaJyTwQ7gdVV9\npBjb/z9gpRtblogsL2F8uSUB4bk+1y1kub04cQPgnviji7hD6SGc5qS2qnpYRMZS+ElzLE4b+9lu\nX9N/C9j3Jnffp5E/iZWk/I5yayLXikgITm1oOk4tqSB7KeA4U9VNeZZbBNwvIk+q6tERP0WkI3C6\nqv4XJwEGutOjiggzp2kpFHjXnbYDWKCqfYr5VU0hrFmpYpqK0y7ezf38MXCnW8X2iMhIt5N0LU4H\nXk4zwh04nYabgW0i0gdARGqJyFtu+/lRbhPFFziJ6ONcfQgf4/RTICJBIvKMe2VblM9wmioC3X3d\nwvFXzDe622yBc/L8Frez2L2CRkR6i8jQQrZfG/jBTQwXutvIOcFn4FxFF9dK4BwRaer20dxZyHLL\ngDoi0s79PAp4rIht1wb+cBNDY5zmofATLPuzmxjOxTlB5yz7CU7HP+4NBqtwLvhyf9eSlB/uMmeL\nyHsiEuLWhL7HaWaCgsuxsOMsr1k4tZbn3KSTE/cbODU2cDqzz3V/vh0nWRRmNk6f0OUcq7l+AXRx\n+x4QkQtE5LkTfV9TMEsOFZDbfDABmCIiHpwr5s04bex/4HRcLnOvzq4FRojIWpxO7Pvc6TcAD7jV\n769x2p4LemZiNk6T0ru5po0CThERdfcZCPxUjNCnAVvddb7HSRa5m6N2u3dEfY3zDEeiqq7CuUtl\nsYj8jnPXzceFbP8pYKqI/ILT+Tkap1mkE04n6UQRKahDOh9V3YnTrLIIJ0ktLWS5ZJz29TdEZA1w\njrveiUwHurnlN9X9TvEi8lABy04F7nW/e39gEM6FwLXAUJybBjYB7+DclZOC01d0r4jMLmH55fgF\np1/rVxH5FXgCp3kRnOPhbRH5Z64yKPA4y7tRN7buwCmAuvG8Cjykqm+7i40AXnKPgyO4zXIFUdU1\nOOew7Tl9Ku7v7S7gQ3f7L7hlY0rIY+9zMOVB3lsYywMR8eQ0f4hIK5yEW1RThzGVgtUcjCmAewfM\ndnGerAbn9tFv/BiSMWXKkoMxBXDvuOkPvO42F3UDHvRvVMaUHWtWMsYYk4/VHIwxxuRTYZ5zyMzM\n8iYmJvs7jHIhKqo6VhYOK4tjrCyOsbI4JjY2It94YMVRYWoOQUH29HsOK4tjrCyOsbI4xsrir6sw\nycEYY0zZseRgjDEmH0sOxhhj8rHkYIwxJh9LDsYYY/Kx5GCMMSYfnz7n4L468mPgGc3zUncR6YUz\nWmQWMEdVxxSwCWOMMX7gs+Tgjtc/Ded1lgV5Hue9vNuBJSLyvqr+5qt4jDEmr4DDmwk6qP4Ow2fS\nM7Ih9tqTWteXNYc0nJeY5HuxiPsijv2qutX9PAfnReeWHIwxZSMzhahPOhCQedjfkfjEc0vb869v\n2/DzznKWHHK9r7ig2XVwXmifYzdwRlHbjI2NKJ3gKgG/lcXaD+Gb0ZBd0CuC/SPW3wGUI1YWxxRZ\nFtmZkHkYAoKhUXxZhFSmzj0cyW+f1i56wUKUl7GVijX2x549Bb0/vfIJOLSJ4D3fgjerwPmREWEk\nHUop46gcYb+9SHBicV76ZkzFkF6rHQe7vlv0guXc9u2HmD9/A7fd5rxltVVX+Paygye9PX8lhx04\ntYccOS+9r7ICk9YSsvkTQjd/TPD+1UUuH1kGMZ3IoQ7TyKjVrugFfSw6ugb79xf0dtOqx8rimJKU\nRVZkUx9H41uZmdnMmPEDEycmkJycQYsWMcTFNQCgceNTTnq7fkkOqrpJRCJF5DScF5NfDvzDH7GU\nqYwj1Pzy7wQe3nz8dG8WAWn7j37MDgono243vMEFNx1VqxZMamqGLyM9oeywuqQ2uQECQ/0Ww1G1\nIsjyVo0aZZGsLI6pImWxcuVOHnlkAb/+6rTSX355s7+UEHLz5d1KbXFejn4akCEifYBPgI2q+iHO\nC8jfchd/x31ZeIUWmLSWkK3zgIJfoBR4eAvBe78vcF528CmkN7yEtEa9Sa/XE4LCCt1PtdgIDlWR\nJjZjTH4HDqQyduwyZs36Ca8XGjWKZPz4nlx4YZNS24cvO6RXAt1PMP9roIOv9u8PEQkPELy76NcM\np9fuSFK3WcdN84ZGOR1jxhhThClTvuH1138iKCiA++9vyz//GUf16qV7/igvHdLlVvCfS4lcdCOe\njKKv1D1ujSG1yY1kV6tVyEIBpJ5+Ld6wk7+LwBhT9WRmZhMU5Axq8fDDcWzZksSwYZ1o0aKQc81f\nVDWSQ3YWYfoKAck7S7xq9V+fLdHymRFNONT+aQiuUeJ9GWNMXqmpmUyb9h1z565j3rybCAkJJCYm\njFmzevt0v5U6OXjSEsGbTfDe/xH+Xb5n8UrkcJsxpLQaUJy9guek3spnjDHH+frrLQwZsoANGw4A\nsGjRJi6+uMhHwkpFpU0O1Vc/RY2fJh03LTOyKalNbynxtrxBNUhrcgN4bJxCY4zv7d59hMcfX8L7\n7/8BwJlnRjNpUjwdOzYssxgqbXII3nPsrqDs0GjwBJHS6mFSm5U8ORhjTFl5773fGD58EQcPplGt\nWiCDBnXgvvvaEhJStu/FrnTJwZOeREDyTjyZzgMwB+I/IKN+Lz9HZYwxxZOdDQcPptGz52lMmNCT\n006r6Zc4KldyyDhC9AdnEZB+4Ng0a/83xpRjhw+n8/33O+nevTEA113Xgjp1atC1ayM8fjx/Vejk\nELj/J2r8NBmyUgHwZCYTkH4AryeIrMgmZIfVI7McDPFgjDEFmTNnHcOHf8W+fSksWdKXJk2i8Hg8\ndOvW2N+hVdzkEHhwLTV+nEDo1s/yzcusdT4HLpnvh6iMMaZoW7cmMWLEIubNWw/AeeedSnp6wQNt\n+kuFTA5Be78nak7Po5+TW9xHRt3uRz9nxLb3Q1TGGHNiGRlZvPzyKqZM+Ybk5EzCw0MYMaIT/fqd\nS2Bg+bobskImh4Aj2wDnLqSM2h1JPuufeMNO9XNUxhhzYsOHL+L1150h73v3PpMxY7pTp064n6Mq\nWIVMDjkyTu1CUvf/+DsMY4wplnvuacM332zjySe70bPn6f4O54TKVz3GGGMqCa/Xy7vv/sY993yO\n1+uMu9a0aTRff31ruU8MUEFrDuH/G+zvEIwxplDr1u1nyJCFLFu2FYBrr21Br17OcNoBARXj9voK\nlxwCkncSmLILgMyoVn6OxhhjjklJyeC55/7HCy98T3p6FtHR1XjiiW7Ex5f/mkJeFS451Fg58ujP\nyec+6sdIjDHmmCVLNjN48AI2bXLe2/yPf5zFqFFdiI4u/MVd5VnFSQ67fyT6/csISHGG3U49o/K/\nVdQYU3F8990ONm06SPPmMUya1Iu4uPr+DukvqTjJYftSApO3A5AdUpMj5w7zc0DGmKosKyubjRsP\n0LRpNAADBrQjOjqMm28+u8wHyfOFCne3Ukqzfuy7bj3Z4Y38HYoxpor6+efdXHbZ2/z97++QmJgC\nQGhoELfffl6lSAxQkWoOq190/g8IsnctG2P84vDhdCZOTGDGjB/IzvZSt244mzYdJCqqYvYrnEjF\nSQ7VogCnSckYY8qS1+vls8/WMnLkYnbuPExAgId77mnD0KEdCQ8P8Xd4PlFxkoMrvf5F/g7BGFPF\njBy5mBkzfgCgdetTmTLlQs4+u7afo/KtCtfnYIwxZe3SS5sSGRnKhAk9mTPnxkqfGKAC1hyMMcbX\nVqzYzvLlWxk0KA6ATp0a8sMPdxIREernyMqOJQdjjHHt35/CmDFL+e9/fwGgS5dGXHBBPYAqlRjA\nkoMxxuD1ennnnd8YPfpr9u1LITg4gAED2nH22bH+Ds1vLDkYY6q0NWv2MWTIQhISnPfEdO7ckIkT\n42nWLNrPkfmXJQdjTJU2ffpKEhK2UatWGKNHd6NPnxZ4PBVj5FRfsuRgjKlykpLSiIx0+hBGjOhC\n9erBDBoUVykfZjtZdiurMabK+PPPw9x112dccslbpKdnARATE8ZTT/WwxJCHJQdjTKWXlZXNv/71\nAx07vsbHH69h+/Ykfvppl7/DKtesWckYU6n9+OMuHnlkAT/+6CSDv/3tDMaN60GDBpF+jqx882ly\nEJFngDjACwxU1e9yzesP3AxkAd+r6kO+jMUYU/VMmpTA009/S3a2l/r1Ixg3rgeXXNLU32FVCD5r\nVhKRbkAzVe0A3AE8n2teJDAY6KKqnYGWIhLnq1iMMVVT48Y18XjgvvvasnTprZYYSsCXfQ7xwEcA\nqvo7EOUmBYB091+4iAQB1YH9PozFGFMFbNp0gI8+0qOfr7uuBUuX3sro0d0q7eipvuLLZqU6wMpc\nn/e405JUNVVERgMbgBTgbVVdU5yNRtWsDrERpR5sRRNrZXCUlcUxVbUs0tOzmDIlgTFjvsbr9dKj\nR5Ojb2irXdv6Fk5GWXZIH32qxK1BDAfOBJKAr0TkXFX9saiNJB5IJjPkkO+irABiYyPYs6dql0EO\nK4tjqmpZfPPNNgYPXsCaNU7jwzXXNCcyMrRKlkVBTvaCwZfJYQdOTSFHPWCn+3MLYIOq7gUQkaVA\nW6DI5GCMMQD79qUwevTXvP32rwA0aVKTSZN60bVrI2Jja1hy+It82ecwH+gDICJtgB2qmvPb2gS0\nEJGcp07OB9b6MBZjTCUzePAC3n77V0JDAxkypAOLF/ela1d7t3xp8VnNQVUTRGSliCQA2UB/EekH\nHFTVD0VkMrBIRDKBBFVd6qtYjDGVQ3a2l4AAp4V6+PBOpKZm8tRT3WnSJMrPkVU+Pu1zUNVH80z6\nMde8l4GXfbl/Y0zlkJycwdNPr+CXX/bw1ltX4fF4aNo0mjffvMrfoVVa9oS0MaZc+/LLDQwb9hVb\ntiTh8cCqVX/Stm1df4dV6VWc5LAjwd8RGGPK0I4dhxgxYhGff74OgFatYpk8Od4SQxmpOMnBlR12\nqr9DMMb42L//vZoxY5Zy5EgG1asH8+ijHbnzztYEBdlYoWWl4iWHiNP9HYIxxsf270/hyJEMLr20\nKWPH9qB+/ar5cJ8/VajkkFW9vr9DMMb4wMGDqaxdu5/zz68HwIAB7WjTpg49e9rFoL9UqDpaYPJ2\nf4dgjClFXq+XDz/8g06dXqdv349JTEwBIDQ0yBKDn1WomkOK3OXvEIwxpWTDhkQeffQrFi/eDEC7\ndvVISkq3N7KVExUqOXgD7aAxpqJLS8vkhRe+59lnvyUtLYuaNUN57LGu3HTTWUcfcDP+V6GSgzGm\n4rvrrs+ZN289ANdd15LHH+9KbGx1P0dl8rLkYIwpU/fc04b16xOZOLEnnTvbWEjllSUHY4zPZGd7\nefPNX1izZj9PPtkNgE6dGvL1130JDKxQ98NUOZYcjDE+8dtvexg8eCHffbcDcJqQzjorFsASQwVg\nycEYU6qOHMlgypRvmD59JVlZXmrXrsFTT3WnVata/g7NlIAlB2NMqfnii/UMG/YV27YdwuOB228/\nl+HDOxMZGerv0EwJWXIwxpSauXPXsW3bIc4+uzZTpvSides6Ra9kyiVLDsaYk5aZmc3OnYdp2DAS\ngFGjunL22bW59dZzbZC8Cs5+e8aYk/L99zu48ML/csMNH5CengVATEwYd9xho6dWBvYbNMaUyIED\nqQwevIDLLnubX3/dQ1paJlu3Jvk7LFPKrFnJGFMsXq+XDz74g1GjlrB3bzJBQQH0738+Dz/cnurV\ng/0dnilllhyMMcVy331z+OADBSAurj6TJsXTvLndnlpZWbOSMaZYevQ4nejoajz33EV89NF1lhgq\nOas5GGMKtGTJZjZtOsitt54DwHXXteCii063IbWrCEsOxpjj7N59hMceW8IHH/xBaGggXbs24vTT\na+LxeCwxVCGWHIwxgDNI3qxZP/HUU8tISkqjWrVABg3qYO9vrqIsORhj+OWXPQwe/CUrV/4JQHz8\naYwf35PTTqvp58iMv1hyMMbw5JNfs3Lln9SpU4OxY3tw+eXN8HjsrWxVmSUHY6ogr9dLcnImNWo4\nzyeMG9eD11//iSFDOhARYYPkGbuV1ZgqZ+vWJPr2/Zi+fT/C6/UC0LRpNGPGdLfEYI6ymoMxVURG\nRhbTp69i6tRvSE7OJDw8hA0bDnDGGVH+Ds2UQ8WqOYjI2yLSy9fBGGN849tvt9Or1xuMGbOU5ORM\nrrxSSEjoZ4nBFKq4NYcPgHtF5DngbWCmqm7zXVjGmNIybNhXvPrqagAaNz6FiRN70rPn6X6OypR3\nxUoOqvou8K6I1AD+DrwlIoeAp1V1gS8DNMb8NTExYQQHBzBgQDsGDryAsDAbJM8Urdh9DiJSHbgG\n6IvTHPUp8KCIdFfVkYWs8wwQB3iBgar6Xa55DYG3gBBglaree9Lfwhhz1Nq1+9m2LYkePU4DYMCA\ndvTuLTRrFu3XuEzFUtw+h5nAGqA9MEhVO6nqS0Bv4JJC1ukGNFPVDsAdwPN5FpkKTFXVC4AsEWl0\nkt/BGAOkpGQwYcJyunefRf/+c0lMTAEgNDTIEoMpseLWHH4AHlDVIzkTRCROVVeIyJ2FrBMPfASg\nqr+LSJSIRKpqkogEAF2AG935/U/+KxhjFi3axPDhi1i/PhGAiy8+wx5iM3/JCZODiNQEYnBO4p+K\nSM7RFgzMAs5U1R8KWb0OsDLX5z3utCQgFjgEPCMibYClqjrspL+FMVXUrl2HGTVqCR995LxnoXnz\nGCZN6kVcXH0/R2YquqJqDh2Ah4HzgK9yTc8Gvijhvjx5fq4PPAdsAj4XkctU9fMTbaB69RCqx9og\nYACxVg5HVeWyuOKKd1mxYhthYUE88UR3Hn44juDgQH+HVS5U5eOiNJwwOajqXGCuiNyrqtNLuO0d\nODWFHPWAne7Pe4HNqroeQEQWAq2AEyaH5OR0juw5VMIwKp/Y2Aj2WDkAVbMsvF7v0SajRx/twIsv\nrmTcuB60bdugypVFYaricVGYk02SRTUr3aaqM4H6IvJk3vmq+tgJVp8PjAZedpuOdqjqIXe9TBHZ\nICLNVHUt0BbnziVjTCEOH05n4sQEkpMzmDr1QgA6dmxIx44N/RyZqYyKalbKdv/PLOmGVTVBRFaK\nSIK7nf4i0g84qKofAg8Br7md0z/j3BprjMnD6/Xy2WdrGTlyMTt3HiYoKICBAy+gUaNT/B2aqcSK\nalZ63f0xDJilqr+VZOOq+mieST/mmrcO6FyS7RlT1WzefJBhw75iwYKNALRpU4fJk3tZYjA+V9xb\nWQ8Bb4tIBvAG8Kaq7vJdWMZUbV6vl2nTvmPq1BWkpGQSGRnKiBGd6dv3bAIDbTBl43vFOspUdayq\nngPcDJyCc3fRHJ9GZkwV5vF42LAhkZSUTK6+Wli+vB+33XauJQZTZko6ZHcKcARIBmqUfjjGVF37\n9qWwe/cRWrSoBcCoUV258srmdO/e2M+RmaqoWMlBRIYBfXDGQXoT6Kuqm3wYlzFVhtfr5Z13fuOJ\nJ5YQE1OdRYtuISQkkJiYMEsMxm+KW3OIAm5T1Z98GYwxVc2aNfsYPHgB33yzHYBWrWI5cCCV2rWt\nYm78q7jPOaQBfUSkT+75RTznYIwpRHJyBs8++y3/93/fk5GRTa1aYYwe3Y0+fVrYmEimXPgrzzl4\nSzkWY6oEr9fLNde8x8qVfwLQt+85jBzZmZo1q/k5MmOOKe5zDgdV9dnc80RktM+iMqYS83g89Ot3\nHsnJ3zNlSi/atavn75CMyaeoZqUeQE/gZhHJPSB8MHAb8LgPYzOmUsjKymbmzB/JyMjmvvvaAnDd\ndS24+mqxQfJMuVVUs9IfQF3356xc0zOAG3wSkTGVyOrVfzJ48EJ+/HEXoaGBXHWVUKdOOB6PxxKD\nKdeKalbaCbwpIstVdXMZxWRMhZeUlMb48cv5979X4/VC/foRjBvXgzp1wv0dmjHFUlSz0juqej2w\nTERyd0B7AK+q2qs9jcnF6/XyySdrGDlyMbt2HSEw0MM997ThkUc6EB4e4u/wjCm2opqVHnT/twHy\njCmmWbN+YteuI7RtW5fJk3tx1lmx/g7JmBIrqlkpZ3A9D1BfVZeLyF1AHDDF18EZUxGkpWVy8GAa\ntWvXwOPxMHFiPMuXb+OWW84mIMCeWTAVU3FH8ZoJpItIa+BO4H3geZ9FZUwFkZCwlZ493+C+++bg\n9Totr02bRnPrredYYjAVWnGTg1dVvwOuAl5Q1Tkc/05oY6qUvXuTGTBgHlde+R5r1+5n+/ZD7N6d\n7O+wjCk1xR1bKVxE2uEMvtdNREJxxlsypkrJzvby1lu/8OSTS0lMTCU0NJCBAy/ggQfaUa1aSQc5\nNqb8Ku7RPBWYAbyiqntEZDzO6KzGVBler5frrnufr7/eAkDXro2YNCmeJk3sOslUPsVKDqr6DvBO\nrknDVdXGVjJVisfjIS6uPr//vpcxY7pz1VVig+SZSqu473O4ERgCROP2NYgI9pyDqey+/HIDGRnZ\nXHppUwAGDGjHXXe15pRTbJA8U7kVt1lpNM5dSvaUtKkSduw4xIgRi/j883XExITRoUN9oqLCCA0N\nIjTU+hZM5Vfco3ytqn7t00iMKQcyM7P5179+YOLEBI4cyaB69WAGDryAiIhQf4dmTJkqbnJIEJFx\nwGJyvdtBVb/yRVDG+MOqVTt55JEF/PLLHgAuvbQpY8f2oH79CD9HZkzZK25y6OX+3yHXNC9gycFU\nCtnZXgYOnI/qPho0iGD8+J5cfPEZ/g7LGL8p7t1KPQBExGN3KZnKwuv1kpaWRbVqQQQEeJgwoScL\nF25k0KAO1KgR7O/wjPGr4t5NOUrDAAAdO0lEQVStdC7wKhAONBeRUcB8Vf3Wl8EZ4ysbNiQydOhX\n1K8fzrPPXgxAp04N6dSpoZ8jM6Z8KO7wGS8AtwM73c/vAE/7JCJjfCgtLZMpU76hW7dZLFmymblz\n17N/f4q/wzKm3ClucshQ1Z9yPqjqGnJ1TBtTESxduoXu3f/DpEnfkJaWxfXXt2T58n5ER4f5OzRj\nyp3idkhnisjpOJ3QiMgl2MB7poLIysrmwQe/4L33fgegadMoJk/uZU1IxpxAcZPDIOBjQETkILAJ\nuNVXQRlTmgIDAwgKCqBatUAefjiO++9vaw+yGVOEol4TGgncoarPAOeIyGNAP2Atx/ofjCl3fvtt\nD2lpWbRuXQeAxx/vykMPtef002v6OTJjKoai+hxeBmoDiMiZwEPA3cB84DnfhlYAb0aZ79JULEeO\nZPDEE0uIj3+DBx6YR3p6FgDR0WGWGIwpgaLq1k1U9Ub35z7Ae6q6AEBEbvJpZAVIO61PWe/SVCDz\n5q1n+PCv2LbtEB6PM6R2RkY2ISGB/g7NmAqnqORwONfP3XGedciRXdTGReQZnPdNe4GB7tvk8i4z\nHuigqt2L2h4B1k5s8tu2LYnhwxcxb956AM45pzZTpvTivPPq+DkyYyquos62QSJSG4jAGTrjegAR\nCQdqnGhFEekGNFPVDiLSAvg3xw+/gYi0BLoC1l5kTkpWVjZXXvkeW7YcJDw8hGHDOnLbbecRFFTc\nu7SNMQUp6i9oAvAb8DMwRlUTRSQMWAbMKmLdeOAjAFX9HYhyO7hzmwqMKHHUpsrzep1RXAIDAxg8\nuAN//3szli+/lbvuamOJwZhScMKag6rOFZG6QJiqJrnTUkRkiKrOL2LbdYCVuT7vcaclAYhIP2AJ\nzm2xxRIVVQNibYRMgNgqWg6JiSkMG7aQhg0jGTGiKwD9+1/AAw+093Nk5UNVPS4KYmXx1xTZiK+q\nGeRp9ilGYijI0YfmRCQauA1ntNf6xd1AYuIRMgMOncSuK5fY2Aj27Kla5eD1enn//T947LEl7N2b\nTHh4CDfc0JIzzqjF3r2Hi95AFVAVj4vCWFkcc7JJ0pf17x04NYUc9Tj2bERPIBZYCnwItHE7r43J\nZ/36RPr0eZ/775/L3r3JxMXVZ86cG4iMtBfwGOMrvrz9Zz7O60VfFpE2wA5VPQSgqrOB2QAichrw\nmqo+7MNYTAWUmZnN00+v4PnnvyM9PYvo6Go8/nhXbrihFR6Pjd5ijC/5LDmoaoKIrBSRBJzbXvu7\n/QwHVfVDX+3XVB6BgR6+/XY76elZ3HRTK0aN6kpMjA2SZ0xZ8OmDA6r6aJ5JPxawzCacZyiMYffu\nI6SlZdGwYSQej4fJk3uxa9cROnRo4O/QjKlS7J4/Uy5kZ3t57bUf6djxNR56aP7RW1WbNImyxGCM\nH9gjx8bvfv55N0OGLGDlyj8BCAkJ4MiRDMLDQ/wcmTFVlyUH4zeHD6czcWICM2b8QHa2lzp1ajB2\nbA8uv7yZdTgb42eWHIxfpKdnER//Bhs3HiAgwMPdd7dm6NCORETY7anGlAeWHIxfhIQEcu21LZg/\nfwOTJ/fi3HNP9XdIxphcLDmYMpGRkcX06ato0CCCq65qDsCDD17Aww+3JzDQ7oswpryx5GB87ttv\ntzNkyAJ+/30ftWqFceGFTQgPD7H3LBhTjllyMD6TmJjCmDFLeeONXwBo3PgUJk6Mt7uQjKkALDmY\nUuf1enn33d954okl7NuXQnBwAAMGtGPgwAsICwv2d3jGmGKw5GBKXUZGNs8//z/27UuhY8cGTJoU\nz5lnxvg7LGNMCVhyMKUiJSWDjIxsIiNDCQkJZOrUXmzadJDrr29pzywYUwHZbSLmL/vqq0107TqL\nxx5bfHRaXFwDGz3VmArMag7mpO3adZhRo5bw0UcKQPXqwSQnZ1C9uvUrGFPRWXIwJZaVlc1rr/3I\nuHHLOXQonbCwIB55pAP33tuG4GC7PdWYysCSgymR1NRMevd+hx9+2AXARRc1Ydy4HjRqdIqfIzPG\nlCZLDqZEqlULonnzWuzadYSxY3tw6aVNrV/BmErIkoM5Ia/Xy2efrSU2tgZxcfUBePLJbgQGBtjD\nbMZUYpYcTKE2bz7IsGFfsWDBRpo1i+arr24mNDSIU06p5u/QjDE+ZsnB5JOensVLL63k6adXkJKS\nSWRkKHfd1ZqgILvz2ZiqwpKDOc6KFdsYPHghqvsAuPrq5owe3Y1TT63h58iMMWXJkoM5KiUlg9tv\n/4y9e5M5/fSaTJwYT/fujf0dljHGDyw5VHFer5esLC9BQQGEhQXz5JPdWL8+kYEDL6BaNTs8jKmq\n7K+/ClPdx+DBC+jWrTGDBsUB0KdPCz9HZYwpD6yHsQpKTs5g7Nhl9OjxH1as2M5///szaWmZ/g7L\nGFOOWM2hilm4cCNDh37Fli0HAejb9xxGjuxMaKgdCsaYY+yMUEUcOZLBgw/O49NP1wLQsmUtJk/u\nRbt29fwcmTGmPLLkUEVUrx7EgQOpVK8ezJAhHbj77jb23IIxplCWHCqx1av/JDIylCZNovB4PDz9\n9EUEBnpo0CDS36EZY8o5u3SshJKS0hg27CsuvvhNBg9eiNfrBaBx41MsMRhjisVqDpWI1+vl44/X\nMHLkYnbvPkJgoIdzzqlNZma2vWfBGFMilhwqiY0bD/DoowtZtGgzAOefX5fJk3vRqlWsnyMzxlRE\nlhwqgcOH07noov9y8GAap5wSyqhRXbj55rMJCLD3LBhjTo5Pk4OIPAPEAV5goKp+l2teD2A8kAUo\ncKeqZvsynsoqPDyEe+5pw8aNB3jiiW7Exlb3d0jGmArOZx3SItINaKaqHYA7gOfzLPIK0EdVOwER\nwN98FUtls2fPEQYMmMe77/52dNqgQXH83/9dYonBGFMqfHm3UjzwEYCq/g5EiUjuW2Xaquo29+c9\nQIwPY6kUsrO9vPHGz4i8wDvv/Mb48cvJyMgCsFd1GmNKlS+bleoAK3N93uNOSwJQ1SQAEakLXASM\nKmqDUVE1IDai9COtAH75ZTf33vsZy5dvBaBXrya8+OKl1KtX08+R+V9sFT0mCmJlcYyVxV9Tlh3S\n+S5tRaQ28Clwv+a8XeYEEhOPkBlwyBexlVspKRlMnvwN06evIjMzm9jY6jz33N+Ij2+Mx+Nhz56q\nVR55xcZGVPkyyGFlcYyVxTEnmyR92ay0A6emkKMesDPng9vENBcYqarzfRhHhRYQ4OGLLzaQlZXN\nbbedS0JCP2688WxrRjLG+JQvaw7zgdHAyyLSBtihqrlT+VTgGVWd58MYKqQdOw4RFhZEVFQYoaFB\nPP/8xQC0bVvXz5EZY6oKnyUHVU0QkZUikgBkA/1FpB9wEPgC6As0E5E73VXeVNVXfBVPRZCZmc2/\n/vUDEycm0Lv3mTz7rCUFY4x/+LTPQVUfzTPpx1w/h/py3xXNypU7eeSRBfz66x4AkpLSyczMtpFT\njTF+YU9I+9nBg6mMHbuc11//Ea8XGjaMZPz4nlx0URN/h2aMqcIsOfjRgQOpdO78Ort3HyEoKID7\n7mvLP/8ZR40awf4OzRhTxVly8KOaNasRH38a69cnMmlSPC1b2iB5xpjywZJDGUpLy2TatO/o2LEB\nHTs2BGD8+J5UqxZkg+QZY8oVSw5lZOnSLQwZspD16xM588xolizpS2BgANWrWxOSMab8seTgY3v2\nJPP440uYPft3AJo1i2bixHgCA+0uJGNM+WXJwUdyBskbM2YpBw+mUa1aIA8/HEf//ucTEmJvZTPG\nlG+WHHwkKSmN8eOXc/BgGj16NGbChHhOP90GyTPGVAyWHErRkSMZBAV5CA0NombNakyaFE92tpcr\nrjjTxkIyxlQo1vBdSubNW0+XLq/xwgvfH53297+fSe/eYonBGFPhWHL4i7ZtS6Jv34/p2/djtm07\nxKJFm8jO9vo7LGOM+UusWekkZWRk8corPzB5cgLJyZmEh4cwbFhHbr/9PHtmwRhT4VlyOAn79qVw\nzTXv8dtvewG44oozGTOmG3Xr2punjDGVgyWHkxAdXY2YmDAaNTqFCRN60KuXDZJnjKlcLDkUg9fr\nZfbs32nTpi5nnBGFx+PhxRcvISIi1J5wNsZUSpYcirBu3X6GDl3I0qVb6dKlEbNnX4PH4+HUU8P9\nHZoxxviMJYdCpKZm8txz/2PatO9IT88iOroa117bwt9hGWNMmbDkUIAlSzYzZMhCNm48AMBNN7Xi\nsce6Eh0d5ufIjDGmbFhyyGP37iPcfPNHpKVlIRLD5MnxxMU18HdYxvjUzp076Nv3BkSaA5CRkUGT\nJk155JFHCQwMJDU1lWnTnua3334hKCiIqKgYBg0ayqmn1gFg69YtPP/8VA4cSCQrK5uzzz6H/v0f\nIiQkxG/fKSsri6FDH+bhh4dQv77//oYPHz7M6NEjOHz4MGFh1XniiaeIjDzluGVeffVlVqxIICgo\nkHvvfZBzzz2Pffv2MnbsaNLSUomKimL48CfYunULb7zxGmPGTPB53PYQHM4geV6v8+Ba7do1GDKk\nIyNHdmbhwpstMZgqo1Gjxrzwwiu88MIrvPzyTDIzM/jyy3kATJv2NLVqxTJz5pvMmDGLm2++lUGD\nHiQzM5OsrCxGjhzCTTf1ZcaMWbz66n8AmDlzhj+/Dh99NJtzz23t18QA8O67b9K6dVteeulVunXr\nwRtvvH7c/DVr/uC7777l5ZdnMnHis0yf/jwA//nPa3Tp0o3/+78ZdO7cjdmz30akOTExtVi0aIHP\n467yNYeff97NkCELuO2287juupYADBjQzs9RmaoscmEfQrfPP6l1C3uXYFr9i0iKn12ibbVseRbb\ntm0lOfkIK1Yk8M47Hx2dd84559GyZSuWLl1MWFh1GjU6jdat2wLg8Xi4//4H8XiOv/bMzMzkqace\nZ9eunYSEhDJy5Gi+++5bNmxYzwMPPERycjJ9+17P7NmfcsMNVxEX14moqCjmzv2ct9/+AIC5cz9j\n3bo13HjjLYwfP4bMzAwCAgIYOnQUderUOW5/s2e/w8svzwRg/vy5zJ79DoGBAZx22hkMHTqCOXM+\nZcWKBPbu3cPo0eP4+uvFLFgwD48ngC5dunPjjTeze/cuxox57Gj8I0eOPi7ZJCQs4803Zx233yuu\nuJqLLvrb0c8rV37HsGHONjp16sqQIQ8dt/zWrVsRaU5AQACRkZHUqBHOzp072LZtC3/722UAtG/f\ngVGjHqVv39vp0+d6xo59gh49epXo91lSVTY5HD6czsSJCcyY8QPZ2V7S0lZy7bUtbBwkY3BOhEuX\nLuHKK69h+/ZtNG58GkFBx58umjUTtmzZTFhYGM2anXncvNDQavm2OXfuZ8TExPDEE2NZsOALli37\nmtDQ0EL3HxfXkbi4jqxa9T0bNqynSZMzWLp0CTfeeDMzZrzEDTf8g3bt2vPNN8t4/fV/MXToyKPr\n79ixg5CQkKPNNykpKUydOo2IiAj697+L9evXAbBr159Mn/5vdu7cweLFC3nxxVcBuO++O+jRoxeJ\nifu47ba7aNPmfD777GM++OA9Bgx4+Oh+OnbsTMeOnU9Ylvv27aNmzSgAoqKi2Ldv73HzmzQ5g1mz\nXiU1NZXk5COsXbuG/fv306RJU775ZhnNm7dgxYoEDhxIBKBBg4bs2vUnqampVKuWv5xLS5VLDl6v\nlzlz1jFixCJ27DhMQICHu+9uzdChHS0xmHKhpFf4OWJjI9iz59BJ73fLls088MDdAKxfv45//KMv\nXbt2Z+3aNWRlZedb3uv1EhAQCHjIzs4/Py/VPzj/fKdW3qvXxQDMmfNpocu3bNkKgK5de7B8+VLq\n12/Axo3rOeusc5gwYQxbtmzm9ddfJTs7++jJN8fu3buJja199HNkZCTDhg0CYPPmjRw86Nxs0qJF\nSzweD7///ivbtm1lwIB7AEhOPsKff+6gbt16PPvsFF599WUOHUpC5K/dsZjTfJ3b6ac34YorruKh\nh+6nXr36NG16Jl6vl1tuuY0pU8bzwAN306FDp+PWjYmJYd++vT5tMqtSyWHfvhQGDvyC+fM3AHDe\neacyZUovzjnnVD9HZoz/5fQ5AIwcOYSGDRsDUL9+fbZu3UxGRgbBwcce+ly3bg1du3YnODiE999/\n97htpaens23bFpo0aXp0WmBgQL5BKXNfkGVmZh43LyjI2Ve3bj0YNepRmjQ5g/btO+DxeAgKCmbM\nmInUqlWr0O+Ts+2MjAyefnoSr732JjExtY5r1snZR1BQMB06dGLIkBHHbWPcuNG0bx/HlVf2YdGi\nBSQkLDtufnGalWrVqsX+/XsJDw9n79491KqVv/Hvmmuu55prrgfgnntuo27dukRERDB69DgAtmzZ\nxMqV3+dbz5eqVId0eHgwGzceICIihPHjezJ37o2WGIwpwP33D2T69GmkpqZSvXoNOnbswr///crR\n+T///CNr1igdOnSmXbv27Nq1k2XLvgYgOzubl16axsKFXx63zebNW7Jq1XcALF++lFmz/k316jWO\nNrP89NPqAmOpVSsWj8fDggVf0L17POD0hyxduhhw2vTnz5933Dq1a9dm9+7dgFMLCAwMJCamFrt2\n/ckff/yeLxGJtGDVqpWkpqbi9Xp59tkppKWlcuDAAerXb4DX62XZsiVkZGQct17Hjp2PduLn/Mud\nGAAuuCCOr75yOpAXL15I+/YdjpufmJjII488iNfrZcOG9WRnZxMTU4tPPvmQjz5yapGff/4pnTp1\nObrO/v37iYkpPDGWhkqfHL79djv796cAEBoaxMsvX0ZCQj/uuOM8e4+zMYWoV68+3bvH8/rrThv8\nwIGDSE9P49Zbb+Suu/oya9a/GTNmAoGBgQQEBDB16gt88smH3HHHLdx//52Eh4dzxx33HLfNXr0u\nJiUlhQceuJt3332LSy65nPPPb3e0OWvLlk35OrFzdO7cldWrV3HOOecBcMcdd7N06WL697+LmTNn\ncNZZZ+eJvx5paWkkJSVxyik1adeuPXfe2ZeZM2dw00238PzzTx+XIOrUqcN1191I//53cffd/YiJ\niSE0tBq9e1/NM89MZtCgB4mPv5jVq1fxv/+tKFFZ9ulzA6q/c//9d7Jq1UpuuqkvAM89N5UdO7YT\nFRVFs2bCHXfcwvjxo4/WXrp06caXX37B3Xf3Y/fuXfTufTUA27dvo3bt2j7tbwDwFNQGVi5N9XgT\nL1tCZkzrYi2+f38KTz21lDfe+IV//OMsnnnmIh8HWHb+attyZWJlcYyVxTGxsRG8+OIM0tJSufnm\nfv4Op1Q9//xUWrU6h/j4C4u1fGxsxEl1pla6S2ev18vbb/9Kp06v8cYbvxAcHMCpp9YosCPIGFN5\nXXVVH1avXsX27dv8HUqpWbtW2b17d7ETw19RqTqk167dz+DBC0hIcA6GTp0aMGlSL5o1i/ZzZMaY\nshYUFMSUKc/7O4xS1ayZ8NRTE8tkX5UmOezYcYgePf5DenoWMTFhPPFEN667zp5bMMaYk1FpkkO9\nehFce20LAgI8jBzZmagoGyTPGGNOVoVNDrt2HWbUqCXceus5dOrUEICpUy+09zcbY0wpqHDJISsr\nm9de+5Fx45Zz6FA6GzceYP78m/B4PJYYjDGmlPg0OYjIM0Ac4AUGqup3ueb1AsYBWcAcVR1zwo01\nimfVllgeufEtVq/eBcDFFzdh3Lie1q9gjDGlzGe3sopIN6CZqnYA7gDy3jbwPHAN0Am4SERanmh7\nA5cN4qJL3mP16l3UqxfOa69dwaxZvWnYMNIn8RtjTFXmy+cc4oGPAFT1dyBKRCIBRKQJsF9Vt6pq\nNjDHXb5Qb775Cx4P3HtvW5Yt68ellza1GoMxxviIL5uV6gArc33e405Lcv/fk2vebuCME21sz57B\nlglyiY2N8HcI5YaVxTFWFsdYWfw1ZfmE9IlO7nbiN8aYcsSXyWEHTg0hRz1gZyHz6rvTjDHGlAO+\nTA7zgT4AItIG2KGqhwBUdRMQKSKniUgQcLm7vDHGmHLAp6OyisgEoCuQDfQHWgMHVfVDEekK5AwS\n8r6qTvFZIMYYY0qk4gzZbYwxpsxUuiG7jTHG/HWWHIwxxuRTLsdWKtVhNyq4IsqiBzAepywUuNN9\nqLDSOVE55FpmPNBBVbuXcXhlqohjoiHwFhACrFLVe/0TZdkooiz6Azfj/H18r6oP+SfKsiMiZwEf\nA8+o6gt55pXo3Fnuag6lPexGRVaMsngF6KOqnYAI4G9UQsUoB9zjoGtZx1bWilEWU4GpqnoBkCUi\njco6xrJyorJwR2MYDHRR1c5ASxGJ80+kZUNEagDTgIWFLFKic2e5Sw6U8rAbFVyhZeFqq6o570Dc\nA8SUcXxlpahyAOekOKKsA/ODE/19BABdgE/c+f1VdYu/Ai0DJzou0t1/4e7t8tWB/X6JsuykAZdS\nwDNjJ3PuLI/JIe/QGjnDbhQ0bzdQt4zi8ocTlQWqmgQgInWBi3B+4ZXRCctBRPoBS4BNZRqVf5yo\nLGKBQ8AzIrLMbWarzAotC1VNBUYDG4DNwLequqbMIyxDqpqpqimFzC7xubM8Joe8bNiNY/J9XxGp\nDXwK3K+q+8o+JL84Wg4iEg3chlNzqIo8eX6uDzwHdANai8hlfonKP3IfF5HAcOBM4HSgvYic66/A\nyqEiz53lMTnYsBvHnKgscv4A5gIjVbUyP2F+onLoiXPFvBT4EGjjdlJWVicqi73AZlVdr6pZOG3P\nrco4vrJ0orJoAWxQ1b2qmo5zfLQt4/jKkxKfO8tjcrBhN44ptCxcU3HuSpjnj+DK0ImOidmq2lJV\n44CrcO7Qedh/ofrcicoiE9ggIs3cZdvi3MVWWZ3o72MT0EJEcl4mfz6wtswjLCdO5txZLp+QtmE3\njimsLIAvgETgm1yLv6mqr5R5kGXgRMdErmVOA16rAreynujvoynwGs6F38/AfZX19mYosizuwWly\nzAQSVHWI/yL1PRFpi3PBeBqQAWzHuTlh48mcO8tlcjDGGONf5bFZyRhjjJ9ZcjDGGJOPJQdjjDH5\nWHIwxhiTjyUHY4wx+ZTLUVmNKW0icgkwDGdEyhrARuAeVT1QCtuuA0xT1WvdW0nnAl8C/wMCVfXV\nQtbrlzNfRC4FVqhqZR//x1QQdiurqfREJATnydmzVHWnO20isFtVS3XYDRG5BbhcVa8v4Xpf4jyT\nsK404zHmZFlyMJWeiJwC7MJJDuvyzNsEvAm0B2oBD6nqIneo6xdxRvMMB4ar6gJ3LKuZwCk4tZD+\nwGFgGdAd+AyIAt7HGdwsSFVHisjlwONAKrAGuAcYiVN73w48A/zoxtJaVfu58V0PXKOq15V2uRhz\nItbnYCo9VT2Ic2JeLSILRGSEiEiuRfapajzwT44N4PcSznsRegJXAP9yhx0Yj/OilM7AY8Atufaz\nDpgAfKmq9+dMF5HqwL+AS1W1C84YSJ1yrfcS8CfwD+BVnLH2w93Z17nrGlOmLDmYKkFVJwKNcU6+\njYFvReQ+d/YX7v/LgZwXoPQARovIYuBtnOEIauPUMBa721yiqkOLsfuWwFZV3eOuN1RVlxQS52Gc\nN3n1cRNES2BB8b+pMaXDOqRNlSAi1d0hzd8C3hKR9zhWS8i5SPLgvG4SnBenXK2qe/Nsx0vJL6pK\nus7LbmxpwNuVeWwkU35ZzcFUeiJyMfCNiETkmtwEyOl/6On+3xn4yf15GU6TDiJSS0Sedacn4L6O\nVUQ6i8jrxQjhD6C+iDRw13taRHrnWSYbCAZQ1dVAGPAATv+GMWXOkoOp9FT1C5x2+4UislhEluC8\nIrG/u0gDEfkcmILT7wDwIHCViCzFecPeV+70UUB3Efka52XtRd7tpKpHcN5x/L67XgzweZ7FvgA+\nFZGO7uc3gEOV/DWfphyzu5VMleberdSrPN1CKiIenKGWp1XylziZcsxqDsaUI+5La1YCv1hiMP5k\nNQdjjDH5WM3BGGNMPpYcjDHG5GPJwRhjTD6WHIwxxuRjycEYY0w+/w9o8ID2yd0yggAAAABJRU5E\nrkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feeee33b898>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "yfyy0EmYqyNx",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            },
            {
              "item_id": 2
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "8bcb58be-239c-49c2-e42f-d0a2eca85be4",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291924057,
          "user_tz": -480,
          "elapsed": 819,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "conf_arr = confusion_matrix(y_test, predLR)\n",
        "\n",
        "df_cm = pd.DataFrame(conf_arr, index = ['Ham','Spam'],\n",
        "                  columns = ['Ham','Spam'])\n",
        "plt.figure(figsize = (10,7))\n",
        "sn.heatmap(df_cm, annot=True,cbar_kws={\"orientation\": \"horizontal\"})\n",
        "plt.xlabel(\"Predicted Label\")\n",
        "plt.ylabel(\"True Label\")"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(69,0.5,'True Label')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nYII=\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feeee34bda0>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "DodoSbOhLVoe",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Algorithm: Naive Bayes"
      ]
    },
    {
      "metadata": {
        "id": "vKoCVaQwKriO",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 85
        },
        "outputId": "7438af75-90ce-4759-944b-9b7f2d9dfb10",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291938077,
          "user_tz": -480,
          "elapsed": 1133,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "from sklearn.naive_bayes import GaussianNB\n",
        "clf = GaussianNB()\n",
        "clf.fit(X_train,y_train)\n",
        "predNB = clf.predict(X_test)\n",
        "\n",
        "print('Accuracy score: {}'.format(accuracy_score(y_test, predNB)))\n",
        "print('Precision score: {}'.format(precision_score(y_test, predNB)))\n",
        "print('Recall score: {}'.format(recall_score(y_test, predNB)))\n",
        "print('F1 score: {}'.format(f1_score(y_test, predNB)))"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy score: 0.8726457399103139\n",
            "Precision score: 0.5\n",
            "Recall score: 0.8943661971830986\n",
            "F1 score: 0.6414141414141414\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "metadata": {
        "id": "iu2kvHQILNlW",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "outputId": "0726c1cf-d9e8-43f6-db49-4fc4f55d56a6",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291939337,
          "user_tz": -480,
          "elapsed": 772,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "#plotting ROC curve\n",
        "prob_predNB=clf.predict_proba(X_test)\n",
        "\n",
        "fpr = dict()\n",
        "tpr = dict()\n",
        "roc_auc = dict()\n",
        "n_classes = 2\n",
        "for i in range(n_classes):\n",
        "    fpr[i], tpr[i], _ = roc_curve(y_test, prob_predNB[:,i])\n",
        "    roc_auc[i] = auc(fpr[i], tpr[i])\n",
        "    \n",
        "\n",
        "plt.figure()\n",
        "lw = 2\n",
        "plt.plot(fpr[1], tpr[1], color='darkorange',\n",
        "         lw=lw, label='ROC curve (area = %0.2f)' % roc_auc[1])\n",
        "plt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\n",
        "plt.xlim([0.0, 1.0])\n",
        "plt.ylim([0.0, 1.05])\n",
        "plt.xlabel('Specificity')\n",
        "plt.ylabel('Sensitivity')\n",
        "plt.title('Receiver operating characteristic Curve')\n",
        "plt.legend(loc=\"lower right\")\n",
        "plt.show()"
      ],
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nVV8TFRVNmzan0r272TnEZrNxzz33YbOVvvZ0u908+eRjpKYeJDw8gsmTp7J+/Xfs2LGde++9n5yc\nHEaOvJZFi/7DddddSUpKP+Lj41my5L+8995HACxZ8hnbtm3l+uv/yowZ03C7Xdjtdh56aArNmzcv\ndbxFixbyyitvALB06RIWLVqIw2Hn1FNP56GHJrF48X9Yt24thw6lM3XqdL755muWLfscm83OeecN\n4vrrbyQtLZVp0x4tin/y5Kmlks3atat5550FpY572WVXcf75fy56vGHDeiZONPfRr98AJky4v9T2\njRs34dixY3i9XnJycomOjsZut9O4cROysrIAOHr0KG3atMVms3HppVfw8ceLuOOOe2r8uzwRQZcc\nwlLrpkrp2LECZs5cy2uvbcLrNcjP38A113SWeZCEwDwRrlq1kiuuuJr9+/fRtu2pOJ2lTxcdOij2\n7NlNVFQUHTp0LPVaRERkuX0uWfIZiYmJPP74Uyxb9gWrV39DREREpcdPSelLSkpfNm78nh07ttOu\n3emsWrWS66+/kddee5nrrvsLvXr15ttvV/PWW//goYcmF73/wIEDhIeHF1Xf5ObmMnfuPGJjYxk9\n+na2b98GQGrqH8yf/08OHjzA118v56WXXgfg7rtvZfDgYWRmZnDzzbfTo8c5fPbZp3z00QeMGfNA\n0XH69u1P3779qyzLjIwMmjSJByA+Pp6MjEOlXj/zzK40a9aMa665jOPHjxclkvvu+xv33nsHsbGx\nxMbGceedowE466zuLF787yqPWReCLzmcZHuDYRgsXryNSZNWcODAMex2G3fc0Z2HHuoriUEEjNpc\n4RdKTo4lPf3oCR9zz57d3HvvHQBs376Nv/xlJAMGDOL337fi8XjLbW8YBna7A7Dh9ZZ/vSytf+Oc\nc8y78mHDLgBg8eL/VLp9ly5nADBgwGDWrFlFy5at2LlzO2ee2Y2nn57Gnj27eeut1/F6vUUn30Jp\naWkkJzctehwXF8fEieMA2L17J1lZZmeTzp27YLPZ2LLlF/bt28uYMXcCkJNznD/+OMApp7Tguefm\n8Prrr3D0aDZKnVyPxcLq65I2b95EWloqCxd+QmbmYe677y769u3Ps8/OZvr02XTrdjYvvvgcH3+8\niGuuuY6mTZuRmpp6UnHURHAlB8N7UskhIyOXsWO/YOnSHQCcfXYz5swZRrduzeo0TCGCUWGbA8Dk\n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\nAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feeece93588>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "GAXnVghKq6Hp",
        "colab_type": "code",
        "colab": {
          "autoexec": {
            "startup": false,
            "wait_interval": 0
          },
          "output_extras": [
            {
              "item_id": 1
            },
            {
              "item_id": 2
            }
          ],
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "744cb299-31f1-44f3-bb6c-0c41a65dd47b",
        "executionInfo": {
          "status": "ok",
          "timestamp": 1522291948176,
          "user_tz": -480,
          "elapsed": 969,
          "user": {
            "displayName": "kelvin tan",
            "photoUrl": "https://lh3.googleusercontent.com/a/default-user=s128",
            "userId": "109637707412718406125"
          }
        }
      },
      "cell_type": "code",
      "source": [
        "conf_arr = confusion_matrix(y_test, predNB)\n",
        "\n",
        "df_cm = pd.DataFrame(conf_arr, index = ['Ham','Spam'],\n",
        "                  columns = ['Ham','Spam'])\n",
        "plt.figure(figsize = (10,7))\n",
        "sn.heatmap(df_cm, annot=True,cbar_kws={\"orientation\": \"horizontal\"})\n",
        "plt.xlabel(\"Predicted Label\")\n",
        "plt.ylabel(\"True Label\")"
      ],
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(69,0.5,'True Label')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 60
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nGbYkSZIyMmxJkiRlZNiSJEnKyLAlSZKUkWFLkiQpI8OWJElSRoYtSZKkjAxbkiRJGRm2JEmSMjJs\nSZIkZWTYkiRJysiwJUmSlJFhS5IkKSPDliRJUkaGLUmSpIwMW5IkSRkZtiRJkjIybEmSJGVk2JIk\nScrIsCVJkpSRYUuSJCkjw5YkSVJGhi1JkqSMDFuSJEkZGbYkSZIyKlS6gOYsnP1OEYDiom/1LPG8\nvrj0i8ptiuU2Sz1vqL6ZNk20Lbay7RI1Na638XYbtG28vcX72qjtEttYVg3F5rffXNsltt/o57t0\nja1p2+h5E8dsqe3WL/na1rRt3F+Tr2nUtql/Es3V0NS/n4+3u+TzpdoWl37Nx3U33X/Dh00dzyXW\nt/SaRitaek3jGhvvV0ttG2+3qZ9t431u8f3WzPaaPg7L2H4TbeuXp+5Wtm3q59S4n5baNrfdprax\nrBrqW9j+x9ttfltLt230M2jwj7q+UdvG/TXup+l6G9XSxBu5cQ0fP2/FcWbpn0vDdk1tr7nXtFRD\nPY23v/TPqfE+L27b4LWNj2Ozx6OJ47Ai2y7576hx2/om2zZ5PJppU9/479wKaltk6bbNba/xv7Ul\nj9mSf++XPr71S73uby8/WLNU52WObEmSJGVk2JIkScrIsCVJkpSRYUuSJCkjw5YkSVJGhi1JkqSM\nDFuSJEkZGbYkSZIyMmxJkiRlZNiSJEnKyLAlSZKUkWFLkiQpI8OWJElSRoYtSZKkjAxbkiRJGRm2\nJEmSMjJsSZIkZWTYkiRJysiwJUmSlJFhS5IkKSPDliRJUkaGLUmSpIwMW5IkSRkZtiRJkjIybEmS\nJGVk2JIkScrIsCVJkpRRTbFYrHQNkiRJHZYjW5IkSRkZtiRJkjIybEmSJGVk2JIkScrIsCVJkpSR\nYUuSJCkjw5YkSVJGhUoXoLYREZ8Dfgf8JKV0cURcC2wCvFNucn5K6c6IOBA4FqgHLk8pXVWRgjuw\niOgFXAusAvQAzgKmAjcAtcCbwKiU0gKPR9uKiJ7A05SOyXb4Hqmo8s96LFAHnA78Dd8nFRMRhwGj\nGizaFHgC6A38u7xsTErpyYg4AdgHKALjUkq/b9Niq4wXNe0EIqI3cAcwHfhbg7D1q5TSHY3aPQWM\nABYCjwPbpJT+1fZVd1wRsR8wLKV0XkQMA+4B/gz8PqX0y4g4B3gVuB6PR5uKiPHAl4GfUQpbvkcq\nJCIGAg9TCrwrAeOArvg+qQoRsS2wL/BZ4JiU0tMN1v0H8CtgC6Av8BDw2ZTSR5WotRp4GrFzWADs\nCryxjHZfBB5PKb2fUppHKQBslbu4zialdEtK6bzy0zWA1yj9Yb+tvOx2YCc8Hm0qItYD1gfubKGZ\nx6Tt7ARMSinNSSm9mVL6b3ybAprdAAACg0lEQVSfVJPTKY0AN2V74K6U0sKU0izgZUrvrU7L04id\nQEqpDqiLiMarjomI7wFvAccAqwKzGqx/CxjaJkV2QhExBfgU8J+U/qgsKK9a9HP3eLStCZTeBwc3\nWOZ7pHI+DfSKiNuA/sAPgN6+TyovIjYDXk0p/aP8d+XMiBgEPEfpdG5zx2RaW9daLRzZ6rxuAE5K\nKe0A/JXSL7LGatq0ok4mpbQlsDtwI0v+rJv7uXs8MomIg4CHU0ozGyz2PVJZNcBAYE/gEOAafJ9U\ni9GU5p0C/BQ4IaW0DaU5c0c30b7THxPDVieVUro3pfTX8tPbgA0onWZctUGz1Vn2qUctp4jYJCLW\nACgfgwIwpzw5Gz7+uXs82s5uwB4R8QilPySnATW+Ryrqn8CUlFJdSmkGMAffJ9ViO2AKQErpN+Xj\nA6VTu75PmmDY6qQi4tcRsVb56XaUPoH1KLBZRPSLiJUozXt4qEIldmTbAGMAImIVSpN/JwF7ldfv\nBfwBj0ebSSntl1LaLKW0OXAlpbkoR/oeqag/AjtERJfyZHnfJ1UgIlYD5qaUFkZETURMioh+5dXb\nUXqf3AfsFhHdyu1XB56tTMXVwU8jdgIRsQml+SifBj4EXgcuAk4CPgDmAoemlN6KiL2BEyh9XPei\nlNJNFSm6Ayv/z/wqSpPje1L6lNUTlD5V1YPSZNJDU0ofejzaXkT8AHiJ0nE4D98jFRMRhwOHlZ+e\nTemThr5PKqj89+TslNJXys/3BU6kdOmH14HDUkofRMS3gQMpHZPvp5TurVTN1cCwJUmSlJGnESVJ\nkjIybEmSJGVk2JIkScrIsCVJkpSRYUuSJCkjw5YkSVJGhi1JkqSM/g8MoL4szOYRwQAAAABJRU5E\nrkJggg==\n",
            "text/plain": [
              "<matplotlib.figure.Figure at 0x7feeee344128>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "metadata": {
        "id": "4PmXnjBOfzOh",
        "colab_type": "text"
      },
      "cell_type": "markdown",
      "source": [
        "## Results:\n",
        "\n",
        "Due to the high dimension sparse matrix, it is unlikely to be linearly separable.\n",
        "Thus, Random Forest is expected to be the best performing model and our findings have confirmed this hypothesis.\n",
        "\n"
      ]
    }
  ]
}